{"version":3,"sources":["Components/LoginForm/LoginForm.js","Components/SignupForm/SignupForm.js","Components/Login/Login.js","Components/Navbar/Navbar.js","Components/Home/Home.js","Components/About/About.js","Components/AptCard/AptCard.js","Components/Appointments/Appointments.js","Components/Filter/Filter.js","Components/DocCard/DocCard.js","Components/MakeAppointment/MakeAppointment.js","Components/App.js","index.js"],"names":["LoginForm","setUser","setIsAuthenticated","useState","loginUsername","setLoginUsername","loginPassword","setLoginPassword","loginError","setLoginError","navigate","useNavigate","className","onSubmit","e","preventDefault","user","username","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","error","type","value","onChange","target","placeholder","name","SignupForm","signupFirstName","setSignupFirstName","signupLastName","setSignupLastName","signupUsername","setSignupUsername","signupPassword","setSignupPassword","passwordConfirmation","setPasswordConfirmation","signupErrors","setSignupErrors","first_name","last_name","password_confirmation","Object","entries","id","map","Login","showLogin","setShowLogin","onClick","Navbar","to","Home","console","log","About","AptCard","appointment","setAppointments","appointments","showForm","setShowForm","time","setTime","date","setDate","updateErrors","setUpdateErrors","handleClick","doctor","field","address","number","rating","updatedInfo","updatedAppointment","updatedAppointmentList","apt","errors","min","max","step","filter","Appointments","Filter","docField","handleField","DocCard","postErrors","setPostErrors","doc","doctor_id","MakeAppointment","doctors","setDocField","doctorList","selectedField","App","isAuthenticated","setDoctors","useEffect","doctorData","appointmentData","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1076c674.chunk.js","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react'\nimport './LoginForm.css'\n\nexport default function LoginForm({ setUser, setIsAuthenticated }) {\n\n    const [loginUsername, setLoginUsername] = useState('')\n    const [loginPassword, setLoginPassword] = useState('')\n    const [loginError, setLoginError] = useState([])\n\n    const navigate = useNavigate()\n\n    const loginOnSubmit = (e) => {\n        e.preventDefault()\n        const user = {\n            username: loginUsername,\n            password: loginPassword\n        }\n        fetch('/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(user)\n        })\n        .then(res => {\n            if(res.ok) {\n                res.json()\n                .then(user => {\n                    setUser(user)\n                    setIsAuthenticated(true)\n                    navigate('/home')\n                })\n            } else {\n                    res.json()\n                    .then(json => setLoginError(json.error))\n                }\n        })\n    }\n\n\n  return <div className=\"container1\">\n            <form onSubmit={loginOnSubmit} className=\"form\">\n                <div className=\"container1\">\n                    <div className=\"container4\">\n                        <h3 className=\"login-h3\">Login</h3>\n                    </div>\n                    <input \n                        type=\"text\"\n                        value={loginUsername}\n                        onChange={(e) => setLoginUsername(e.target.value)}\n                        placeholder=\"username\" \n                        name=\"uname\" \n                        />\n                    <input \n                        type=\"password\"\n                        value={loginPassword}\n                        onChange={(e) => setLoginPassword(e.target.value)}\n                        placeholder=\"password\" \n                        name=\"pwd\" \n                        />\n                    <div className=\"container2\">\n                        <button type=\"submit\">Login</button>\n                    </div>\n                </div>\n                <div className=\"container3\">\n            {loginError ? <div>{loginError}</div> : null}\n        </div>\n    </form>\n  </div>;\n}\n","import { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react'\n// import '../LoginForm/LoginForm.css'\n\nexport default function SignupForm({ setUser, setIsAuthenticated }) {\n\n    const [signupFirstName, setSignupFirstName] = useState(\"\");\n    const [signupLastName, setSignupLastName] = useState(\"\");\n    const [signupUsername, setSignupUsername] = useState('')\n    const [signupPassword, setSignupPassword] = useState('')\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [signupErrors, setSignupErrors] = useState([])\n    const navigate = useNavigate()\n\n    function signupOnSubmit(e){\n        e.preventDefault()\n        // setSignupErrors([])\n        const user = {\n            first_name: signupFirstName,\n            last_name: signupLastName,\n            username: signupUsername,\n            password: signupPassword,\n            password_confirmation: passwordConfirmation\n        }\n        fetch('/users', {\n            method:'POST',\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(user)\n        })\n        .then(res => {\n            if(res.ok) {\n                res.json()\n                .then(user => {\n                    setUser(user)\n                    setIsAuthenticated(true)\n                    navigate('/home')\n\n                })\n            } else {\n                res.json()\n                .then(json => setSignupErrors(Object.entries(json.error))\n                )}\n        })\n    }\n\n  return <div>\n                <form onSubmit={signupOnSubmit} className=\"form\">\n                <div className=\"container1\">\n                    <div className=\"container4\">\n                        <h3 className=\"login-h3\">Signup</h3>\n                    </div>\n                    <input\n                        type=\"text\"\n                        id=\"firstname\"\n                        placeholder=\"First Name\"\n                        value={signupFirstName}\n                        onChange={(e) => setSignupFirstName(e.target.value)}\n                        />\n                    <input\n                        type=\"text\"\n                        id=\"lastname\"\n                        placeholder=\"Last Name\"\n                        value={signupLastName}\n                        onChange={(e) => setSignupLastName(e.target.value)}\n                        />\n                    <input \n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"Username\" \n                        value={signupUsername}\n                        onChange={(e) => setSignupUsername(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Choose a password\" \n                        value={signupPassword}\n                        onChange={(e) => setSignupPassword(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password_confirmation\"\n                        placeholder=\"Confirm password\" \n                        value={passwordConfirmation}\n                        onChange={(e) => setPasswordConfirmation(e.target.value)}\n                        />\n                    <button \n                        type=\"submit\">Sign up\n                    </button>\n                </div>\n            </form>\n            { signupErrors ? signupErrors.map(e => <div key={e}>{e[1]}</div>) : null}\n\n  </div>;\n}","import React, {useState} from \"react\";\nimport LoginForm from \"../LoginForm/LoginForm\"\nimport SignupForm from \"../SignupForm/SignupForm\"\nimport '../LoginForm/LoginForm.css'\n\nexport default function Login({ setUser, setIsAuthenticated }) {\n\n    const [showLogin, setShowLogin] = useState(true)\n\n\n\n  return (\n        <div className=\"login-signup-toggle\">\n            {showLogin ? (\n                <>\n                    <LoginForm setUser={setUser} setIsAuthenticated={setIsAuthenticated} />\n                    <div className=\"login-signup-toggle\">\n                        <p className=\"login-signup-toggle\"> \n                            No Account?\n                            <button className=\"front-page-toggle\" onClick={() => setShowLogin(false)}>\n                                Sign up\n                            </button>\n                        </p>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <SignupForm setUser={setUser} setIsAuthenticated={setIsAuthenticated} />\n                    <div className=\"login-signup-toggle\">\n                        <p className=\"login-signup-toggle\">\n                            Already have an account?\n                            <button className=\"front-page-toggle\" onClick={() => setShowLogin(true)}>\n                                Log In\n                            </button>\n                        </p>\n                    </div>\n                </>\n            )}\n        </div>\n  )\n}\n","import { NavLink } from \"react-router-dom\";\nimport { React } from 'react'\nimport './Navbar.css'\n\nexport default function Navbar({ setIsAuthenticated, user, setUser }) {\n\n  \n\n  const logout = () => {\n    fetch('/logout', {\n      method: \"DELETE\"\n    })\n    .then(() =>{\n      setUser(null)\n      setIsAuthenticated(false);\n    })\n  }\n\n  return (\n    <header>\n      <div className=\"topnav\">\n        <nav>\n        <NavLink to='/home'>Home</NavLink>\n        <NavLink to='/about'>About</NavLink>\n        <NavLink to='/makeappointment'>Make Appointment</NavLink>\n        <NavLink to='/appointments'>{user? user.first_name : null}'s Appointments</NavLink>\n        <NavLink to='/' onClick={logout}>Logout</NavLink>\n        </nav>\n      </div>\n    </header>\n  )\n}","import React from 'react'\nimport './Home.css'\n\nexport default function Home({ user }) {\n  console.log(user)\n  \n  return (\n    <>\n      <h3>Hello {user ? user.first_name : null}! Welcome to Pickadoc</h3>\n    <div className=\"div6\">Find the doctor who's right for you, when and where you need it. The best doctors in your area are included here.</div>\n    </>\n  )\n}","import React from 'react'\nimport './About.css'\n\nexport default function About() {\n\n    // do we need an about page? maybe the home page covers it\n    // do we need an about page? maybe the home page covers it\n    // do we need an about page? maybe the home page covers it\n\n    \n    return (\n        <h3 className=\"div2\">\n            Pickadoc \n        </h3>\n    )\n}","import React, {useState} from \"react\";\nimport \"./AptCard.css\"\n\nfunction AptCard({ appointment, setAppointments, appointments}) {\n    const [showForm, setShowForm] = useState(true)\n    const [time, setTime] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [updateErrors, setUpdateErrors] =useState([])\n\n    function handleClick() {\n        setShowForm(!showForm)\n        setUpdateErrors([])\n     }\n\n     function updateAppointment(e){\n        e.preventDefault()\n        \n        const updatedInfo = {\n            time: time,\n            date: date\n        }\n\n        fetch(`/appointments/${appointment.id}`, {\n            method:'PATCH',\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(updatedInfo)\n        })\n        .then(res => {\n            if(res.ok) {\n                res.json()\n                .then((updatedAppointment) => {\n                    console.log(updatedAppointment)\n                    const updatedAppointmentList = appointments.map((apt) => {\n                        if(apt.id === appointment.id){\n                            return updatedAppointment\n                        }\n                        else{return apt}\n                    })\n\n                    setAppointments(updatedAppointmentList)\n                    setTime(\"\")\n                    setDate(\"\")\n                })\n            } else {\n                res.json()\n                .then(json => setUpdateErrors(Object.entries(json.errors))\n                )}\n        })\n     }\n\n     function deleteAppointment() {\n         \n        fetch(`/appointments/${appointment.id}`, {\n            method: \"DELETE\"\n        })\n        .then(res => res)\n        .then(() => {\n            const updatedAppointmentList = appointments.filter((apt) => {return apt.id !== appointment.id})\n            setAppointments(updatedAppointmentList)\n        })\n     }\n\n\n\n    return(\n        <div className=\"apt-div\">\n        <li className = \"card\">\n            <b><u><h2>Appointment with Dr. {appointment.doctor.name}:</h2></u></b>\n            <p><b><u>Date:</u></b>  {appointment.date}</p>\n            <p><b><u>Time:</u></b>  {appointment.time}</p>\n            <p><b><u>Field:</u></b>  {appointment.doctor.field}</p>\n            <p><b><u>Address:</u></b>  {appointment.doctor.address}</p>\n            <p><b><u>Phone Number:</u></b> {appointment.doctor.number}</p>\n            <p><b><u>Rating:</u></b> {appointment.doctor.rating} / 5</p>\n\n            {\n                showForm ? (\n                    <div className = \"button\">\n                    <button onClick ={handleClick}>Edit Appointment</button>\n                    </div>\n                ) : (\n                    <div>\n                        <form onSubmit={updateAppointment} className = \"apt-form\">\n                            <div>\n                                <input\n                                    type=\"date\"\n                                    id=\"date\"\n                                    placeholder=\"Select Date\"\n                                    value={date}\n                                    onChange={(e) => setDate(e.target.value)}\n                                    />\n                                <input\n                                    type=\"time\"\n                                    min = \"08:00\"\n                                    max = \"18:00\"\n                                    step = \"1800\"\n                                    value={time}\n                                    onChange={(e) => setTime(e.target.value)}\n                                    />\n                            </div>\n                            <button \n                                type=\"submit\"> Confirm Updated Details\n                            </button>\n                        </form>\n                        <button onClick={deleteAppointment}>Cancel Appointment</button>\n                        <button onClick ={handleClick}>Go Back</button>\n                    </div>\n                )\n            }\n            { updateErrors ? updateErrors.map(e => <div key={e}>{e[1]}</div>) : null}\n        </li>\n        </div>\n    )\n}\n\nexport default AptCard","import React from \"react\";\nimport AptCard from \"../AptCard/AptCard\";\n\n\nfunction Appointments({user, appointments, setAppointments}) {\n\n\n\nreturn(\n\n    <div className = \"appt-cont\">\n        {user ? (  \n        <>\n        <h1>{user.first_name}'s Appointments</h1> \n        <h3>Below is a list of your current doctor appointments. <br />  Update any appointment information prior to the appointment date <br /> or cancel if need be. </h3>\n\n        <ul className=\"cards\">\n      {appointments.map((appointment) => (\n        <AptCard key={appointment.id} user ={user} appointment = {appointment} setAppointments = {setAppointments} appointments={appointments} />\n      ))}\n    </ul>\n\n        </>\n        \n        \n        \n        \n         ) : null }\n\n\n\n    </div>\n)\n\n\n}\n\nexport default Appointments;","import React from \"react\";\nimport \"./Filter.css\"\n\nfunction Filter({docField, handleField}) {\n     const fields = [\"Allergy and Immunology\", \"Anesthesiology\", \"Dermatology\", \"Diagnostic Radiology\", \"Emergency Medicine\", \"Family Medicine\", \"Internal Medicine\", \"Medical Genetics\", \"Neurology\", \"Nuclear Medicine\", \"Obstetrics and Gynecology\",\"Ophthalmology\",\"Pathology\",\"Pediatrics\",\"Physical Medicine and Rehabilitation\",\"Preventive Medicine\",\"Psychiatry\",\"Radiation Oncology\",\"Surgery\",\"Urology\"]\n\n    return(\n        <div className = \"filter\">\n          <select \n          name=\"filter\" \n          value={docField}\n          onChange={(e) => handleField(e.target.value)}\n          >\n            <option value=\"All\">Filter By Field</option>\n            {fields.map((field) => (\n                <option value= {field}>{field}</option>\n            ))}\n          </select>\n        </div>\n        )\n\n}\n\n\n\nexport default Filter","import React, {useState} from \"react\";\nimport \"./DocCard.css\"\n\nfunction DocCard({doctor, user, appointments, setAppointments}) {\n const [showForm, setShowForm] = useState(true)\n const [time, setTime] = useState(\"\")\n const [date, setDate] = useState(\"\")\n const [postErrors, setPostErrors] =useState([])\n\n function handleClick() {\n    setShowForm(!showForm)\n }\n\n function makeAppointment(e) {\n     e.preventDefault()\n     const doc = doctor.id\n     const appointment = {\n         time: time,\n         date: date,\n         doctor_id: doc\n     }\n     fetch('/appointments', {\n        method:'POST',\n        headers:{'Content-Type': 'application/json'},\n        body:JSON.stringify(appointment)\n    })\n    .then(res => {\n        if(res.ok) {\n            res.json()\n            .then((appointment) => {\n                console.log(appointment)\n                console.log(appointments)\n                setAppointments([appointment, ...appointments])\n            })\n        } else {\n            res.json()\n            .then(json => setPostErrors(Object.entries(json.errors))\n            )}\n    })\n }\n\n\n    return (\n        <div className=\"apt-div\">\n        <li className = \"card\">\n            <p><b><u>Name:</u></b>  {doctor.name}</p>\n            <p><b><u>Field:</u></b>  {doctor.field}</p>\n            <p><b><u>Address:</u></b>  {doctor.address}</p>\n            <p><b><u>Phone Number:</u></b> {doctor.number}</p>\n            <p><b><u>Rating:</u></b> {doctor.rating} / 5</p>\n\n            {\n                showForm ? (\n                    <div className = \"button\">\n                    <button onClick ={handleClick}>Make An Appointment</button>\n                    </div>\n                ) : (\n                    <div>\n                        <form onSubmit = {makeAppointment} className = \"apt-form\">\n                        <div>\n                        <input\n                        type=\"date\"\n                        id=\"date\"\n                        placeholder=\"Select Date\"\n                        value={date}\n                        onChange={(e) => setDate(e.target.value)}\n                        />\n                    <input\n                        type=\"time\"\n                        min = \"08:00\"\n                        max = \"18:00\"\n                        step = \"1800\"\n                        value={time}\n                        onChange={(e) => setTime(e.target.value)}\n                        />\n                    </div>\n\n                    <button \n                        type=\"submit\"> Confirm\n                    </button>\n\n                        </form>\n\n                        <button onClick ={handleClick}>Go Back</button>\n\n                    </div>\n                )\n            }\n            { postErrors ? postErrors.map(e => <div key={e}>{e[1]}</div>) : null}\n        </li>\n    </div>\n    )\n}\n\nexport default DocCard","import React, {useState} from \"react\";\nimport './MakeAppointment.css'\nimport Filter from '../Filter/Filter'\nimport DocCard from '../DocCard/DocCard'\n\nfunction MakeAppointment({user, doctors, appointments, setAppointments}) {\n  \nconst [docField, setDocField] = useState(\"All\")\n\n\n\nfunction handleField(selectedField) {\n    setDocField(selectedField)\n}\n\n\nconst doctorList = doctors.filter((doctor) => {\n  if( docField === \"All\") return true;\n  return doctor.field === docField\n})\n\nconsole.log(doctorList)\n\nreturn (\n  <div className = \"appt-cont\">\n    <h1>Make Appointment</h1>\n    <h3>Please Select a Doctor and the Details of your Appointment</h3>\n    <Filter docField = {docField} handleField = {handleField}/>\n\n    <ul className=\"cards\">\n      {doctorList.map((doctor) => (\n        <DocCard key={doctor.id} doctor = {doctor} user ={user} appointments={appointments} setAppointments = {setAppointments} />\n      ))}\n    </ul>\n  \n\n\n\n\n\n\n  </div>\n\n\n)\n\n\n\n\n\n\n\n\n}\n\nexport default MakeAppointment;","import '../App.css';\nimport { React, useEffect, useState } from 'react'\nimport { Routes, Route } from \"react-router-dom\";\nimport Login from \"./Login/Login\"\nimport Navbar from \"./Navbar/Navbar\"\nimport Home from './Home/Home'\nimport About from './About/About'\nimport Appointments from './Appointments/Appointments'\nimport MakeAppointment from './MakeAppointment/MakeAppointment'\n\nfunction App() {\n\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n    const [user, setUser] = useState(null)\n    const [doctors, setDoctors] = useState([])\n    const [appointments, setAppointments] = useState([])\n\n    useEffect(() => {\n      fetch('/authorized_user')\n      .then(res => {\n          if (res.ok) {\n            res.json()\n            .then(user => {\n              setIsAuthenticated(true)\n              setUser(user)\n            })\n          }\n        })\n\n        fetch('/doctors')\n        .then(res => {\n          if (res.ok) {\n            res.json()\n            .then(doctorData => {\n              setDoctors(doctorData)\n            })\n          }\n        })\n\n        fetch('/appointments')\n        .then(res => {\n          if (res.ok) {\n            res.json()\n            .then(appointmentData => {\n              setAppointments(appointmentData)\n            })\n          }\n        })\n      }, [isAuthenticated])\n\n    if (!isAuthenticated) return <Login error={\"Please Login\"} setUser={setUser} setIsAuthenticated={setIsAuthenticated} />\n\n    return (\n      \n        <div className=\"container\">\n          <Navbar setUser={setUser} setIsAuthenticated={setIsAuthenticated} user={user} />\n          <Routes>\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/home\" element={<Home user={user} />} />\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/appointments\" element={<Appointments user={user} appointments = {appointments} setAppointments = {setAppointments} />} />\n            <Route path=\"/makeappointment\" element={<MakeAppointment user={user} doctors={doctors} appointments = {appointments} setAppointments= {setAppointments} />} />\n          </Routes>\n        </div>\n\n      );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './Components/App';\n// import { createGlobalStyle } from \"styled-components\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}